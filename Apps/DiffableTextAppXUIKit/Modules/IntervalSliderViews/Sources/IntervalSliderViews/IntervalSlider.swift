//=----------------------------------------------------------------------------=
// This source file is part of the DiffableTextViews open source project.
//
// Copyright (c) 2022 Oscar Bystr√∂m Ericsson
// Licensed under Apache License, Version 2.0
//
// See http://www.apache.org/licenses/LICENSE-2.0 for license information.
//=----------------------------------------------------------------------------=

import SwiftUI

//*============================================================================*
// MARK: Declaration
//*============================================================================*

public struct IntervalSlider: View {
    
   //=-------------------------------------------------------------------------=
   // MARK: State
   //=-------------------------------------------------------------------------=
   
    let slider: Slider
    
    //=------------------------------------------------------------------------=
    // MARK: Initializers
    //=------------------------------------------------------------------------=
   
    public init(_ values: Binding<(CGFloat, CGFloat)>, in limits: ClosedRange<CGFloat>) {
        self.slider = Slider(values, in: limits)
    }
   
   //=-------------------------------------------------------------------------=
   // MARK: Body
   //=-------------------------------------------------------------------------=

   public var body: some View { slider }
}

//=----------------------------------------------------------------------------=
// MARK: Initializers
//=----------------------------------------------------------------------------=

extension IntervalSlider {
    
    //=------------------------------------------------------------------------=
    // MARK: Integer
    //=------------------------------------------------------------------------=
    
    public init<T>(_ values: Binding<(T, T)>,
    in limits: ClosedRange<T>) where T: BinaryInteger {
        //=--------------------------------------=
        // Get
        //=--------------------------------------=
        self.init(Binding {(
            //=----------------------------------=
            // Values
            //=----------------------------------=
            CGFloat(values.wrappedValue.0),
            CGFloat(values.wrappedValue.1))
        //=--------------------------------------=
        // Set
        //=--------------------------------------=
        } set: {
            //=----------------------------------=
            // Values
            //=----------------------------------=
            let newValue = (
            T($0.0.rounded()),
            T($0.1.rounded()))
            //=----------------------------------=
            // Unique
            //=----------------------------------=
            if  values.wrappedValue != newValue {
                values.wrappedValue  = newValue
            }
        //=--------------------------------------=
        // Limits
        //=--------------------------------------=
        }, in: CGFloat(limits.lowerBound)...CGFloat(limits.upperBound))
    }
}
